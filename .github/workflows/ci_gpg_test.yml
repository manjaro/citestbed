name: ci_gpg_test
on:
  workflow_dispatch:
#  schedule:
#    - cron:  '30 6 1 * *'

jobs:
  release:
    runs-on: ubuntu-20.04  
    strategy:
      matrix:
        ##### EDIT ME #####  
        EDITION: [xfce]
        BRANCH: [stable]
        SCOPE: [minimal]
        ###################
    steps:
      -
        name: Build ISO
        env:
          EDITION: ${{ matrix.EDITION }}
          BRANCH: ${{ matrix.BRANCH }}
          SCOPE: ${{ matrix.SCOPE }}
          ##### EDIT ME #####
          KERNEL: "linux510"
          CODE_NAME: "Ornara"
          VERSION: "test_upload"
          ###################
        run: |                
          [ "$SCOPE" == "minimal" ] && unset SCOPE
          
          echo "file1" > file1
          echo "file2" > file2
          echo "file3" > file3

                 
          sudo apt-get install paperkey gpg
          
          echo "Unpacking keys; exiting debug mode to redact..."
          set +x
          
          echo "setup values"
          GPG_HOMEDIR="$(mktemp -d -t gnupg.XXX)"
          SECRET_KEY_FILE="$GPG_HOMEDIR/secret.key"
          PUBLIC_KEY_FILE="$GPG_HOMEDIR/public_key.gpg"
          GPG="gpg --homedir=$GPG_HOMEDIR --no-tty --batch --yes"
          
          ls $GPG_HOMEDIR
          
          echo "unpack public key"
          echo "${{ secrets.CI_PUB_KEY }}" | base64 --decode > "$PUBLIC_KEY_FILE"

          echo "unpack secret key"
          echo "${{ secrets.CI_GPG_SECRET }}" | base64 --decode > "$SECRET_KEY_FILE"
          
          echo "Secrets unpacked..."
          set -x 
          
          md5sum "$PUBLIC_KEY_FILE" 
          md5sum "$SECRET_KEY_FILE"
          
          set +x
          paperkey --pubring "$PUBLIC_KEY_FILE" --secrets "$SECRET_KEY_FILE" \
          | $GPG --import
          set -x
          
          echo "some cmd"
          
          set +x
          $GPG --detach-sign --use-agent -u "${{ secrets.CI_GPG_KEY }}" --passphrase="${{ secrets.CI_GPG_PASSPHRASE }}" file1
          set -x
          
          echo "cleaning up"
          shred "$GPG_HOMEDIR"
          rm -rvf "$GPG_HOMEDIR"
          echo "script done"
